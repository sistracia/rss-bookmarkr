name: Test

on:
  push:
    branches:
      - "**"

jobs:
  # test-web:
  #   timeout-minutes: 60
  #   runs-on: ubuntu-22.04
  #   defaults:
  #     run:
  #       working-directory: ./web
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup dotnet
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: 8.x
  #     - name: Setup Bun
  #       uses: oven-sh/setup-bun@v1
  #       with:
  #         bun-version: 1.0.35
  #     - name: Setup end-to-end testing
  #       run: make test_e2e_setup
  #     - name: Wait for the apps in docker healthy
  #       run: timeout 60s sh -c 'until docker ps | grep rss-bookmarkr-web | grep -q healthy; do echo "Waiting for container to be healthy..."; sleep 2; done'
  #     - name: Restore dotnet tool & dependency
  #       run: |
  #         dotnet tool restore
  #         dotnet restore
  #         dotnet paket restore
  #     - name: Run unit test for Server project
  #       run: make test_unit_server
  #     - name: Migrate database schema
  #       run: |
  #         mv migrondi.e2e.json migrondi.json
  #         make migrate_up
  #     - name: Install dependencies
  #       run: bun install --frozen-lockfile
  #     - name: Install Playwright Browsers
  #       run: |
  #         bunx playwright install
  #         bunx playwright install-deps
  #     - name: Run Playwright tests
  #       run: PAGE_URL=http://localhost:8080 bunx playwright test --reporter list
  #     - name: Teardown end-to-end testing
  #       if: always()
  #       run: make test_e2e_teardown

  test-ios:
    timeout-minutes: 60
    runs-on: macos-14
    defaults:
      run:
        working-directory: ./RSSBookmarkr
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: List available Xcode versions
        run: ls /Applications | grep Xcode
      - name: Set up Xcode version
        run: sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
      - name: Check Xcode Command Line Tools
        run: xcrun --version
      - name: Check Available Simulator Runtimes
        run: xcrun simctl list runtimes
      - name: Download the iOS 18.2 Simulator Runtime
        run: xcodebuild -downloadPlatform iOS -exportPath ios_18.2_runtime.dmg
      - name: Install the iOS 18.2 Simulator Runtime
        run: xcodebuild -importPlatform ios_18.2_runtime.dmg
      - name: Verify the Install
        run: xcrun simctl list runtimes
      - name: Create a Simulator with the Downloaded Runtime
        run: xcrun simctl create "iPhone 16 Pro iOS 18.2" "com.apple.CoreSimulator.SimDeviceType.iPhone-16-Pro" "com.apple.CoreSimulator.SimRuntime.iOS-18-2"
      - name: Show current version of Xcode
        run: xcodebuild -version
      - name: Run xcode test
        run: xcodebuild test -scheme RSSBookmarkr -sdk iphonesimulator -destination "platform=iOS Simulator,OS=18.2,name=iPhone 16 Pro"
